
package block;
import java.nio.charset.StandardCharsets;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.Base64;
import java.sql.Connection;
import java.sql.*;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;


class Blocko {
	private String version;
	private String airline;
	private String ticketNumber;
	private String name;
	private double price;
	private Timestamp tstamp;
	private String hash=null;
	private String prevhash=null;


	public Blocko(String pname,String pairline,String pticket) {
		this.version="2.00";
		this.name=pname;
		this.airline=pairline;
		this.ticketNumber=pticket;
		this.price = 0;
		this.tstamp = new Timestamp(System.currentTimeMillis());
		calcHash();
		
	}
	private void calcHash() {
		String dataforhash = this.version+this.name+this.ticketNumber+this.tstamp;
		MessageDigest digest;
		String encoded=null;
		try {
			digest = MessageDigest.getInstance("SHA-256");
			byte[] hasho=digest.digest(dataforhash.getBytes(StandardCharsets.UTF_8));
			encoded = Base64.getEncoder().encodeToString(hasho);
		}catch(NoSuchAlgorithmException e) {
			e.printStackTrace();
		}
		this.hash=encoded;
		System.out.println("hash= " + this.hash);
		
	}
	public String getVersion() {
		return(this.version);
	}
	public String getAirline() {
		return(this.airline);
	}
	public String getTicketNumber(){
		return(this.ticketNumber);
	}
	public String getHash() {
		return(this.hash);
	}
	public String getName() {
		return(this.name);
	}
	public double getPrice() {
		return(this.price);
	}
}
class utility {
	Scanner myscan;
	public utility(Scanner iscan){
		this.myscan = iscan;
	}
	protected Connection createConnection(Connection conn) {
		try{  
			//Class.forName("com.mysql.jdbc.Driver"); 
			conn=DriverManager.getConnection(  
			"jdbc:mysql://localhost:3306/blockchain?serverTimezone=EST5EDT","root","h3ckl3r");
			return(conn);
			}catch(Exception e){ System.out.println(e);}  
			}  

		
	protected void sellTheTicket() {
		System.out.println("in utility sell the ticket");
	}
	protected void listTheChain() {
		System.out.println("in list the chain");
	}
	protected void testConnection(Connection conn) {
		try {
		  java.sql.Statement stmt = conn.createStatement();
		  ResultSet rs = stmt.executeQuery("select a from testo");
		  while(rs.next()) {
			System.out.println(rs.getString("a"));
		}
		}catch(Exception ee){
			System.out.println("in testConnection " + ee.toString());
		}
	}
}

public class bc {
	static Connection conn=null;
	static String sanswer=" ";
	static String nameo=null;

	public static void main(String[] args) {
		ArrayList bchain=null;
		Scanner scan=null;
		if (args.length<3) {
			System.err.println("need name airline and ticket#");
			System.exit(0);
		}
		// Create the first block... initial sale of ticket
		Blocko bc = new Blocko(args[0],args[1],args[2]);
		bchain = new ArrayList(10);
		bchain.add(bc);
		scan = new Scanner(System.in);
		utility u = new utility(scan);
		conn = u.createConnection(conn);
		u.testConnection(conn);
		while (! sanswer.equals("e")){
		  System.out.println("what would you like to do? s:sell ticket e:exit list chain:l");
		  sanswer = scan.nextLine();
		  if (sanswer.equals("e")) {
			  System.out.println("bye!");
			  System.exit(0);
		  }
		  if (sanswer.equals("s")) {
		  	u.sellTheTicket();
	      } 
	}
  }
	
}
